version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@10.8.0

jobs:
  build_and_push_backend:
    docker:
      - image: docker:20.10.12
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Backend Image
          command: docker build -t <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.<YOUR_AWS_REGION>.amazonaws.com/mern-backend:${CIRCLE_SHA1} ./backend
      - run:
          name: Login to ECR
          command: |
            aws ecr get-login-password --region <YOUR_AWS_REGION> | docker login --username AWS --password-stdin <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.<YOUR_AWS_REGION>.amazonaws.com
      - run:
          name: Push Backend Image to ECR
          command: docker push <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.<YOUR_AWS_REGION>.amazonaws.com/mern-backend:${CIRCLE_SHA1}

  build_and_push_nginx:
    docker:
      - image: docker:20.10.12
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Nginx Image
          command: docker build -t <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.<YOUR_AWS_REGION>.amazonaws.com/mern-nginx:${CIRCLE_SHA1} .
      - run:
          name: Login to ECR
          command: |
            aws ecr get-login-password --region <YOUR_AWS_REGION> | docker login --username AWS --password-stdin <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.<YOUR_AWS_REGION>.amazonaws.com
      - run:
          name: Push Nginx Image to ECR
          command: docker push <YOUR_AWS_ACCOUNT_ID>.dkr.ecr.<YOUR_AWS_REGION>.amazonaws.com/mern-nginx:${CIRCLE_SHA1}
  
  deploy_backend:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            sudo pip3 install awscli
      - run:
          name: Configure AWS CLI
          command: aws configure set aws_access_key_id <YOUR_AWS_ACCESS_KEY> && aws configure set aws_secret_access_key <YOUR_AWS_SECRET_KEY> && aws configure set default.region <YOUR_AWS_REGION>
      - run:
          name: Deploy Backend Task Definition to Fargate
          command: aws ecs deploy --cluster <your-ecs-cluster> --task-definition <your-backend-task-definition>

  deploy_nginx:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            sudo pip3 install awscli
      - run:
          name: Configure AWS CLI
          command: aws configure set aws_access_key_id <YOUR_AWS_ACCESS_KEY> && aws configure set aws_secret_access_key <YOUR_AWS_SECRET_KEY> && aws configure set default.region <YOUR_AWS_REGION>
      - run:
          name: Deploy Nginx Task Definition to Fargate
          command: aws ecs deploy --cluster <your-ecs-cluster> --task-definition <your-nginx-task-definition>

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_and_push_backend:
          filters:
            branches:
              only: master
      - build_and_push_nginx:
          filters:
            branches:
              only: master
      - deploy_backend:
          requires:
            - build_and_push_backend
          filters:
            branches:
              only: master
      - deploy_nginx:
          requires:
            - build_and_push_nginx
          filters:
            branches:
              only: master
